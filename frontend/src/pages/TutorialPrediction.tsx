import React, { useState } from "react";
import { scoreRecordApi } from "../services/api";
import "./TutorialPrediction.css";

// Import placeholder images - you may need to replace these with actual image paths
const frame = "https://via.placeholder.com/36x36?text=üìä";
const vector = "https://via.placeholder.com/21x26?text=‚úÖ";
const image = "https://via.placeholder.com/19x18?text=‚≠ê";

export const Tutorial = (): React.JSX.Element => {
  const [file, setFile] = useState<File | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [message, setMessage] = useState<string>("");
  const [activeTab, setActiveTab] = useState<string>('tutorial');
  const [viewMode, setViewMode] = useState<string>('semester'); // 'semester' for Theo K·ª≥, 'full' for Full
  const [partTimeHours, setPartTimeHours] = useState<number>(0);

  // Get user from localStorage
  const getUserId = (): number | null => {
    const userStr = localStorage.getItem('user');
    if (userStr) {
      try {
        const user = JSON.parse(userStr);
        return user.id;
      } catch (error) {
        console.error('Error parsing user from localStorage:', error);
      }
    }
    return null;
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      const selectedFile = e.target.files[0];
      if (selectedFile.type === 'text/csv' || selectedFile.name.endsWith('.csv')) {
        setFile(selectedFile);
        setMessage("");
      } else {
        setMessage('Ch·ªâ h·ªó tr·ª£ file CSV ');
      }
    }
  };

  const handleUploadClick = () => {
    const fileInput = document.getElementById('csv-file-input') as HTMLInputElement;
    fileInput?.click();
  };

  const handleUpload = async () => {
    if (!file) {
      setMessage('Vui l√≤ng ch·ªçn file CSV');
      return;
    }

    const userId = getUserId();
    if (!userId) {
      setMessage('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ t·∫£i l√™n file');
      return;
    }

    setIsLoading(true);
    setMessage("");
    
    try {
      const result = await scoreRecordApi.uploadCsv(userId, file);
      
      if (result.success) {
        setMessage('Upload file th√†nh c√¥ng!');
        setFile(null);
        // Reset file input
        const fileInput = document.getElementById('csv-file-input') as HTMLInputElement;
        if (fileInput) {
          fileInput.value = '';
        }
      } else {
        setMessage(result.message || 'L·ªói khi t·∫£i l√™n file');
      }
    } catch (error) {
      console.error('Upload error:', error);
      setMessage('L·ªói khi t·∫£i l√™n file. Vui l√≤ng th·ª≠ l·∫°i.');
    } finally {
      setIsLoading(false);
    }
  };

  const renderTutorialContent = () => (
    <div style={{ padding: '0 140px' }}>
      <h2 style={{ 
        color: '#3C315B', 
        fontSize: '24px', 
        fontWeight: 'bold', 
        marginBottom: '22px',
        marginLeft: '53px'
      }}>
        H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng h·ªá th·ªëng
      </h2>

      {/* Step 1 */}
      <div style={{
        backgroundColor: '#f8fafc',
        padding: '24px',
        marginBottom: '32px',
        borderRadius: '15px',
        marginLeft: '0',
        marginRight: '124px'
      }}>
        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '16px', gap: '16px' }}>
          <button style={{
            backgroundColor: '#3C315B',
            color: 'white',
            padding: '6px 17px',
            borderRadius: '50px',
            border: 'none',
            fontSize: '18px',
            fontWeight: 'bold'
          }}>
            1
          </button>
          <span style={{ color: '#3C315B', fontSize: '20px', fontWeight: 'bold' }}>
            T·∫£i Student Grade Extractor 1.0
          </span>
        </div>
        <p style={{ color: '#374151', fontSize: '16px', marginBottom: '12px', marginLeft: '84px' }}>
          T·∫£i v√† c√†i ƒë·∫∑t ti·ªán √≠ch Student Grade Extractor 1.0 v·ªÅ m√°y t√≠nh c·ªßa b·∫°n t·ª´ Chrome Web Store ho·∫∑c Firefox Add-ons.
        </p>
        <div style={{
          backgroundColor: '#eef2ff',
          padding: '12px',
          borderRadius: '8px',
          marginLeft: '84px',
          display: 'flex',
          gap: '4px'
        }}>
          <span style={{ color: '#1e40af', fontSize: '14px', fontWeight: 'bold' }}>L∆∞u √Ω:</span>
          <span style={{ color: '#1e40af', fontSize: '14px' }}>
            ƒê·∫£m b·∫£o ti·ªán √≠ch ƒë∆∞·ª£c k√≠ch ho·∫°t trong tr√¨nh duy·ªát c·ªßa b·∫°n sau khi c√†i ƒë·∫∑t.
          </span>
        </div>
      </div>

      {/* Step 2 */}
      <div style={{
        backgroundColor: '#f8fafc',
        padding: '24px',
        marginBottom: '53px',
        borderRadius: '15px',
        marginRight: '124px'
      }}>
        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '16px', gap: '16px' }}>
          <button style={{
            backgroundColor: '#10b981',
            color: 'white',
            padding: '6px 15px',
            borderRadius: '50px',
            border: 'none',
            fontSize: '18px',
            fontWeight: 'bold'
          }}>
            2
          </button>
          <span style={{ color: '#3C315B', fontSize: '20px', fontWeight: 'bold' }}>
            Truy c·∫≠p MyDTU v√† tr√≠ch xu·∫•t ƒëi·ªÉm
          </span>
        </div>
        <p style={{ color: '#374151', fontSize: '16px', marginBottom: '16px', marginLeft: '84px' }}>
          Th·ª±c hi·ªán c√°c b∆∞·ªõc sau ƒë·ªÉ tr√≠ch xu·∫•t ƒëi·ªÉm s·ªë:
        </p>

        {[
          "ƒêƒÉng nh·∫≠p v√†o t√†i kho·∫£n MyDTU c·ªßa b·∫°n",
          'V√†o m·ª•c "H·ªçc t·∫≠p" trong menu ch√≠nh',
          'Ch·ªçn "B·∫£ng ƒëi·ªÉm" ƒë·ªÉ xem ƒëi·ªÉm s·ªë c·ªßa b·∫°n',
          "Nh·∫•p v√†o bi·ªÉu t∆∞·ª£ng Extension tr√™n thanh c√¥ng c·ª• tr√¨nh duy·ªát",
          'Ch·ªçn "Student Grade Extractor 1.0" t·ª´ danh s√°ch ti·ªán √≠ch',
          'Nh·∫•p v√†o n√∫t "Tr√≠ch xu·∫•t & T·∫£i CSV"',
        ].map((text, i) => (
          <div key={i} style={{
            display: 'flex',
            alignItems: 'center',
            marginBottom: '12px',
            marginLeft: '84px',
            gap: '12px'
          }}>
            <div style={{
              backgroundColor: '#10b981',
              width: '6px',
              height: '6px',
              borderRadius: '50%'
            }} />
            <span style={{ color: '#374151', fontSize: '15px' }}>{text}</span>
          </div>
        ))}

        <div style={{
          backgroundColor: '#fef3c7',
          padding: '12px',
          borderRadius: '8px',
          marginLeft: '84px',
          display: 'flex',
          gap: '9px'
        }}>
          <span style={{ color: '#92400e', fontSize: '14px', fontWeight: 'bold' }}>Quan tr·ªçng:</span>
          <span style={{ color: '#92400e', fontSize: '14px' }}>
            File CSV s·∫Ω ƒë∆∞·ª£c t·∫£i xu·ªëng m√°y t√≠nh c·ªßa b·∫°n. H√£y ghi nh·ªõ v·ªã tr√≠ l∆∞u file ƒë·ªÉ s·ª≠ d·ª•ng ·ªü b∆∞·ªõc ti·∫øp theo.
          </span>
        </div>
      </div>

      {/* Step 3 */}
      <div style={{
        backgroundColor: '#f8fafc',
        padding: '24px',
        marginBottom: '72px',
        borderRadius: '15px',
        marginRight: '124px'
      }}>
        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '16px', gap: '16px' }}>
          <button style={{
            backgroundColor: '#3b82f6',
            color: 'white',
            padding: '6px 15px',
            borderRadius: '50px',
            border: 'none',
            fontSize: '18px',
            fontWeight: 'bold'
          }}>
            3
          </button>
          <span style={{ color: '#3C315B', fontSize: '20px', fontWeight: 'bold' }}>
            Chuy·ªÉn ƒë·∫øn trang nh·∫≠p ƒëi·ªÉm
          </span>
        </div>
        <p style={{ color: '#374151', fontSize: '16px', marginBottom: '16px', marginLeft: '84px' }}>
          Sau khi ƒë√£ c√≥ file CSV, chuy·ªÉn ƒë·∫øn trang "Nh·∫≠p b·∫£ng ƒëi·ªÉm" ƒë·ªÉ t·∫£i l√™n v√† ph√¢n t√≠ch d·ªØ li·ªáu ƒëi·ªÉm s·ªë c·ªßa b·∫°n.
        </p>
        <button
          onClick={() => setActiveTab('upload')}
          style={{
            backgroundColor: '#3b82f6',
            color: 'white',
            padding: '12px 20px',
            borderRadius: '8px',
            border: 'none',
            fontSize: '16px',
            fontWeight: 'bold',
            cursor: 'pointer',
            marginLeft: '84px'
          }}
        >
          Chuy·ªÉn ƒë·∫øn trang nh·∫≠p b·∫£ng ƒëi·ªÉm ‚Üí
        </button>
      </div>
    </div>
  );

  const OverviewScore = (): React.JSX.Element => {
    return (
      <div className="frame">
        <div className="frame-wrapper">
          <div className="div">
            <div className="div-2" style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
              <input
                type="radio"
                id="semester-mode"
                name="viewMode"
                value="semester"
                checked={viewMode === 'semester'}
                onChange={(e) => setViewMode(e.target.value)}
                style={{ margin: '0' }}
              />
              <label htmlFor="semester-mode" style={{ display: 'flex', alignItems: 'center', gap: '4px', cursor: 'pointer' }}>
                <div className="text-wrapper">üìö</div>
                <div className="text-wrapper-2">Theo K·ª≥</div>
              </label>
            </div>

            <div className="div-3" style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
              <input
                type="radio"
                id="full-mode"
                name="viewMode"
                value="full"
                checked={viewMode === 'full'}
                onChange={(e) => setViewMode(e.target.value)}
                style={{ margin: '0' }}
              />
              <label htmlFor="full-mode" style={{ display: 'flex', alignItems: 'center', gap: '4px', cursor: 'pointer' }}>
                <div className="text-wrapper-3">üéØ</div>
                <div className="text-wrapper-4">Full</div>
              </label>
            </div>
          </div>
        </div>

        <div className="div-4">
          <div className="overlap-group-wrapper">
            <div className="overlap-group">
              <div className="rectangle" />

              <div className="div-5">
                <div className="div-6">
                  <img className="img" alt="Frame" src={frame} />

                  <div className="div-7">
                    <div className="div-8">
                      <div className="text-wrapper-5">üìä</div>
                      <div className="text-wrapper-6">T·ªïng t√≠n ch·ªâ</div>
                    </div>
                    <div className="text-wrapper-7">120</div>
                  </div>
                </div>

                <div className="div-wrapper">
                  <div className="div-9">
                    <div className="text-wrapper-8">üéØ</div>
                    <div className="text-wrapper-9">Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o</div>
                  </div>
                </div>
              </div>

              <div className="rectangle-2" />
            </div>
          </div>

          <div className="overlap-wrapper">
            <div className="overlap">
              <div className="rectangle-2" />

              <div className="div-5">
                <div className="div-10">
                  <div className="frame-wrapper-2">
                    <div className="vector-wrapper">
                      <img className="vector" alt="Vector" src={vector} />
                    </div>
                  </div>

                  <div className="div-7">
                    <div className="div-11">
                      <div className="text-wrapper-10">‚úÖ</div>
                      <div className="text-wrapper-11">T√≠n ch·ªâ ƒë√£ h·ªçc</div>
                    </div>
                    <div className="text-wrapper-12">85</div>
                  </div>
                </div>

                <div className="frame-wrapper-3">
                  <div className="div-12">
                    <div className="text-wrapper-13">üìà</div>
                    <div className="text-wrapper-14">Ti·∫øn ƒë·ªô: 70.8%</div>
                  </div>
                </div>
              </div>

              <div className="rectangle-3" />
            </div>
          </div>

          <div className="overlap-wrapper-2">
            <div className="overlap-group">
              <div className="rectangle-4" />

              <div className="div-5">
                <div className="div-13">
                  <div className="frame-wrapper-4">
                    <div className="vector-wrapper">
                      <img className="vector-2" alt="Vector" src={image} />
                    </div>
                  </div>

                  <div className="div-7">
                    <div className="div-14">
                      <div className="text-wrapper-15">‚≠ê</div>
                      <div className="text-wrapper-16">GPA hi·ªán t·∫°i</div>
                    </div>
                    <div className="text-wrapper-17">3.01</div>
                  </div>
                </div>

                <div className="frame-wrapper-5">
                  <div className="div-15">
                    <div className="text-wrapper-18">üèÜ</div>
                    <div className="text-wrapper-19">X·∫øp lo·∫°i: Kh√°</div>
                  </div>
                </div>
              </div>

              <div className="rectangle-2" />
            </div>
          </div>
        </div>

        {/* Additional Information Section - Moved to bottom */}
        <div style={{
          backgroundColor: '#f8fafc',
          padding: '20px',
          marginTop: '30px',
          borderRadius: '12px',
          border: '1px solid #e5e7eb'
        }}>
          <h3 style={{
            color: '#3C315B',
            fontSize: '18px',
            fontWeight: 'bold',
            marginBottom: '16px',
            margin: '0 0 16px 0'
          }}>
            Th√¥ng tin b·ªï sung
          </h3>
          
          <div style={{
            display: 'flex',
            flexDirection: 'column',
            gap: '12px'
          }}>
            <label style={{
              color: '#374151',
              fontSize: '14px',
              fontWeight: '500'
            }}>
              Th·ªùi gian ƒëi l√†m (gi·ªù/tu·∫ßn)
            </label>
            
            <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
              <input
                type="number"
                min="0"
                max="60"
                value={partTimeHours}
                onChange={(e) => {
                  const value = parseInt(e.target.value) || 0;
                  if (value >= 0 && value <= 60) {
                    setPartTimeHours(value);
                  }
                }}
                style={{
                  padding: '8px 12px',
                  border: '1px solid #d1d5db',
                  borderRadius: '6px',
                  fontSize: '14px',
                  width: '80px',
                  textAlign: 'center'
                }}
                placeholder="0"
              />
              <span style={{ color: '#6b7280', fontSize: '14px' }}>gi·ªù/tu·∫ßn</span>
              <span style={{ color: '#9ca3af', fontSize: '12px' }}>(0-60 gi·ªù)</span>
            </div>
          </div>
        </div>
      </div>
    );
  };

  const renderOverviewContent = () => (
    <div>
      <OverviewScore />
    </div>
  );

  const renderUploadContent = () => (
    <div style={{
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      backgroundColor: '#f8fafc',
      padding: '40px 20px 60px 20px',
      margin: '0 auto',
      maxWidth: '600px',
      borderRadius: '15px',
      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)'
    }}>
      <span style={{
        color: '#3C315B',
        fontSize: '24px',
        fontWeight: 'bold',
        marginBottom: '30px',
        textAlign: 'center'
      }}>
        T·∫£i l√™n file ƒëi·ªÉm CSV
      </span>
      
      {/* Hidden file input */}
      <input
        id="csv-file-input"
        type="file"
        accept=".csv"
        onChange={handleFileChange}
        style={{ display: 'none' }}
      />
      
      {/* Message display */}
      {message && (
        <div style={{
          padding: '12px 20px',
          margin: '0 0 20px 0',
          borderRadius: '8px',
          backgroundColor: message.includes('th√†nh c√¥ng') ? '#d1fae5' : '#fee2e2',
          color: message.includes('th√†nh c√¥ng') ? '#065f46' : '#dc2626',
          border: `1px solid ${message.includes('th√†nh c√¥ng') ? '#a7f3d0' : '#fca5a5'}`,
          fontSize: '14px',
          fontWeight: '500',
          textAlign: 'center',
          maxWidth: '400px'
        }}>
          {message}
        </div>
      )}
      
      <div style={{
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        position: 'relative',
        width: '100%'
      }}>
        <div style={{
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
          padding: '40px 60px 60px 60px',
          borderRadius: '12px',
          border: file ? '2px solid #10b981' : '2px dashed #d1d5db',
          backgroundColor: file ? '#f0fdf4' : 'white',
          minWidth: '400px',
          transition: 'all 0.3s ease'
        }}>
          <button
            type="button"
            style={{
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
              justifyContent: 'center',
              backgroundColor: file ? '#10b981' : '#3C315B',
              padding: '15px',
              marginBottom: '20px',
              borderRadius: '50%',
              border: 'none',
              cursor: 'pointer',
              width: '60px',
              height: '60px',
              transition: 'transform 0.2s ease'
            }}
            onClick={handleUploadClick}
            onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.05)'}
            onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
          
          >
            <img
              src="https://storage.googleapis.com/tagjs-prod.appspot.com/v1/N1bPFEGoXY/c0gf0356_expires_30_days.png"
              style={{ width: '28px', height: '28px', objectFit: 'contain' }}
              alt="Upload Icon"
            />
          </button>
          
          {file ? (
            <div style={{ textAlign: 'center' }}>
              <span style={{
                color: '#065f46',
                fontSize: '16px',
                fontWeight: '600',
                marginBottom: '8px',
                display: 'block'
              }}>
                ‚úÖ File ƒë√£ ch·ªçn: {file.name}
              </span>
              <span style={{
                color: '#6b7280',
                fontSize: '14px'
              }}>
                K√≠ch th∆∞·ªõc: {(file.size / 1024).toFixed(2)} KB
              </span>
            </div>
          ) : (
            <>
              <span style={{
                color: '#374151',
                fontSize: '18px',
                fontWeight: '600',
                marginBottom: '15px',
                textAlign: 'center'
              }}>
                K√©o th·∫£ file CSV v√†o ƒë√¢y ho·∫∑c
              </span>
              
              <button
                type="button"
                style={{
                  backgroundColor: '#3C315B',
                  color: 'white',
                  padding: '12px 24px',
                  borderRadius: '8px',
                  border: 'none',
                  fontSize: '16px',
                  fontWeight: 'bold',
                  cursor: 'pointer',
                  transition: 'all 0.2s ease'
                }}
                onClick={handleUploadClick}
                onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#2d1b4e'}
                onMouseLeave={(e) => e.currentTarget.style.backgroundColor = '#3C315B'}
              >
                Ch·ªçn file
              </button>
            </>
          )}
        </div>
        
        <span style={{
          color: '#6b7280',
          fontSize: '14px',
          textAlign: 'center',
          marginTop: '15px',
          maxWidth: '300px',
          lineHeight: '1.4'
        }}>
          Ch·ªâ h·ªó tr·ª£ file .csv t·ª´ Student Grade Extractor
        </span>
      </div>
      
      {/* Upload and navigation buttons */}
      {file && (
        <div style={{
          marginTop: '30px',
          display: 'flex',
          gap: '15px',
          flexWrap: 'wrap',
          justifyContent: 'center'
        }}>
          <button
            type="button"
            onClick={handleUpload}
            disabled={isLoading}
            style={{
              padding: '12px 30px',
              fontSize: '16px',
              backgroundColor: isLoading ? '#6b7280' : '#10b981',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontWeight: 'bold',
              transition: 'all 0.2s ease'
            }}
          >
            {isLoading ? 'ƒêang upload...' : 'Upload File'}
          </button>

        </div>
      )}
    </div>
  );

  return (
    <div>
      {/* Navigation buttons */}
      <div className="group-2" style={{
        display: 'flex',
        gap: '15px',
        marginBottom: '30px',
        justifyContent: 'center',
        padding: '20px'
      }}>
        <div 
          className="frame-3" 
          onClick={() => setActiveTab('tutorial')}
          style={{
            padding: '10px 20px',
            backgroundColor: activeTab === 'tutorial' ? '#3C315B' : '#e5e7eb',
            borderRadius: '8px',
            cursor: 'pointer',
            transition: 'all 0.2s ease'
          }}
        >
          <div className="text-wrapper-4" style={{
            color: activeTab === 'tutorial' ? 'white' : '#374151',
            fontSize: '14px',
            fontWeight: '600'
          }}>H∆∞·ªõng D·∫´n</div>
        </div>

        <div 
          className="frame-4" 
          onClick={() => setActiveTab('upload')}
          style={{
            padding: '10px 20px',
            backgroundColor: activeTab === 'upload' ? '#3C315B' : '#e5e7eb',
            borderRadius: '8px',
            cursor: 'pointer',
            transition: 'all 0.2s ease'
          }}
        >
          <div className="text-wrapper-4" style={{
            color: activeTab === 'upload' ? 'white' : '#374151',
            fontSize: '14px',
            fontWeight: '600'
          }}>Nh·∫≠p ƒêi·ªÉm</div>
        </div>

        <div 
          className="frame-5" 
          onClick={() => setActiveTab('overview')}
          style={{
            padding: '10px 20px',
            backgroundColor: activeTab === 'overview' ? '#3C315B' : '#e5e7eb',
            borderRadius: '8px',
            cursor: 'pointer',
            transition: 'all 0.2s ease'
          }}
        >
          <div className="text-wrapper-4" style={{
            color: activeTab === 'overview' ? 'white' : '#374151',
            fontSize: '14px',
            fontWeight: '600'
          }}>T·ªïng Quan B·∫£ng ƒêi·ªÉm</div>
        </div>
      </div>

      {/* Content based on active tab */}
      {activeTab === 'tutorial' ? renderTutorialContent() : 
       activeTab === 'upload' ? renderUploadContent() : 
       renderOverviewContent()}
    </div>
  );
};
